module JoiningDA where
import DA.List
import DA.Time
import DA.Date


-- template Engineer with
--     name: Party
--     employer: Maybe[Party]
--   where
--     signatory name
          

-- data Application = Application with
--     candidate: Party
--     organization: Party

data JobDenial = JobDenial

template JobApplication with
    candidate: Party
    organization: Party
  where
    signatory candidate

    controller organization can
        FirstRoundOffer: ContractId InterviewOffer
          do
            create InterviewOffer
              with
                candidate = candidate
                organization = organization
                timeSlots = [date 2020 Sep 18, date 2020 Sep 21 ]

        -- Denial: JobDenial
        --   do
        --     JobDenial






template InterviewOffer with
    candidate: Party
    organization: Party
    timeSlots: [Date]
  where
    signatory organization

    controller candidate can
        ScheduleFirstInterview: ContractId InterviewAgreement
          do
            create InterviewAgreement with
                candidate = candidate
                organization = organization
                time = DA.List.head timeSlots




template InterviewAgreement with
    candidate: Party
    organization: Party
    time: Date
  where
    signatory organization, candidate

    controller organization can
      HostInterview: ContractId FirstRoundInterview
        do
          create FirstRoundInterview with
            candidate = candidate
            organization = organization
            time = time
 

template FirstRoundInterview with
    candidate: Party
    organization: Party
    time: Date
  where
    signatory candidate, organization

    controller organization can
      InviteBackForSecondRound: ContractId TechnicalInterviewOffer
        do
          create TechnicalInterviewOffer with
            candidate = candidate
            organization = organization
            timeSlots = [date 2020 Sep 25, date 2020 Sep 29]
                  

template TechnicalInterviewOffer with
    candidate: Party
    organization: Party
    timeSlots: [Date]
  where
    signatory organization

    controller candidate can
        ScheduleTechnicalInterview: ContractId TechnicalInterviewAgreement
          do
            create TechnicalInterviewAgreement with
                candidate = candidate
                organization = organization
                time = DA.List.head timeSlots

template TechnicalInterviewAgreement with
    candidate: Party
    organization: Party
    time: Date
  where
    signatory organization, candidate

    -- controller organization can
    --   HostInterview: ContractId FirstRoundInterview
    --     do
    --       create FirstRoundInterview with
    --         candidate = candidate
    --         organization = organization
    --         time = time
---------------------     

test = scenario do
  bill <- getParty "Bill"
  digitalAsset <- getParty "DigitalAsset"

  submittedApplication <- bill `submit` do
    create JobApplication
        with
            candidate = bill
            organization = digitalAsset

  interviewOffer <- digitalAsset `submit` do
    exercise submittedApplication FirstRoundOffer

  interviewAgreement <- bill `submit` do
    exercise interviewOffer ScheduleFirstInterview

  firstRoundInterview <- digitalAsset `submit` do
    exercise interviewAgreement HostInterview
    
  digitalAsset `submit` do
    exercise firstRoundInterview InviteBackForSecondRound
