module JoiningDA where
import DA.List


template Engineer with
    name: Party
    employer: Maybe[Party]
  where
    signatory name
          

data Application = Application with
    candidate: Party
    organization: Party



template JobApplication with
    candidate: Party
    organization: Party
  where
    signatory candidate

    controller organization can
        FirstRoundOffer: ContractId InterviewOffer
          do
            create InterviewOffer
              with
                candidate = candidate
                organization = organization
                timeSlots = ["2020 September 18", " 2020 September 21" ]

template InterviewOffer with
    candidate: Party
    organization: Party
    timeSlots: [Text]
  where
    signatory organization

    controller candidate can
        ScheduleFirstInterview: ContractId InterviewAgreement
          do
            create InterviewAgreement with
                candidate = candidate
                organization = organization
                time = DA.List.head timeSlots

template InterviewAgreement with
    candidate: Party
    organization: Party
    time: Text
  where
    signatory organization, candidate

    controller organization can
      HostInterview: ContractId FirstRoundInterview
        do
          create FirstRoundInterview with
            candidate = candidate
            organization = organization
            time = time
 

template FirstRoundInterview with
    candidate: Party
    organization: Party
    time: Text
  where
    signatory candidate, organization

    controller organization can
      InviteBackForSecondRound: ContractId TechnicalInterviewOffer
        do
          create TechnicalInterviewOffer with
            candidate = candidate
            organization = organization
            timeSlots = ["2020 September 25", " 2020 September 29" ]
                  

template TechnicalInterviewOffer with
    candidate: Party
    organization: Party
    timeSlots: [Text]
  where
    signatory organization

    controller candidate can
        ScheduleTechnicalInterview: ContractId TechnicalInterviewAgreement
          do
            create TechnicalInterviewAgreement with
                candidate = candidate
                organization = organization
                time = DA.List.head timeSlots

template TechnicalInterviewAgreement with
    candidate: Party
    organization: Party
    time: Text
  where
    signatory organization, candidate

    -- controller organization can
    --   HostInterview: ContractId FirstRoundInterview
    --     do
    --       create FirstRoundInterview with
    --         candidate = candidate
    --         organization = organization
    --         time = time
---------------------     

test = scenario do
  bill <- getParty "Bill"
  digitalAsset <- getParty "DigitalAsset"
  submittedApplication <- bill `submit` do
    create JobApplication
        with
            candidate = bill
            organization = digitalAsset

  interviewOffer <- digitalAsset `submit` do
    exercise submittedApplication FirstRoundOffer

  interviewAgreement <- bill `submit` do
    exercise interviewOffer ScheduleFirstInterview

  firstRoundInterview <- digitalAsset `submit` do
    exercise interviewAgreement HostInterview
    
  digitalAsset `submit` do
    exercise firstRoundInterview InviteBackForSecondRound
